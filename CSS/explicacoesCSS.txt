LEMBRAR QUE O NAVEGADOR TEM SUAS PROPRIEDADES PADRÃO, POR EXEMPLO MARGENS E PADDING, VAMOS ANULAR ISSO COM A CHAVE * 
SEMPRE ANULAR ESSAS PROPRIEDADES PADRÃO JÁ QUE EU VOU COLOCAR ELAS AO LONGO DO SITE COMO NECESSÁRIO, A MARGEM E PADDING serão
usadas de acordo com minhas necessidades, fora q isso impede que um usuario tenha experiencia diferente de um navegador para outro.

Para alterar a cor de fundo:

style="background-color: #FF9A6C;"
                          ^^ Este é o código hexadecimal para este tom exato de laranja, serve para definir as cores
     Sitema de chave - valor, a chave é o que voce vai alterar e a chave é como vai ficar, exemplo a chave agora é o fundo da tela
     e o valor é o código hexadecimal da cor q eu quero

     Para usar o CSS de outro arquivo dentro do meu html uso a tag : <link rel="stylesheet" href="style.css">                     
                                                                            ^A relação desse arquivo que você ta linkando  
        No caso a relação (rel) é uma folha de estilo, por isso stylesheet


Para selecionar *TODOS* os elementos da página pelo CSS você usa a chave * e aplica o valor que desejar, exp:

* {
    color: #FF0000;
}     
O exemplo acima mudaria a cor da letra de TODA a página para vermelho,
a tag color sem outra indicação depois é sempre pra letra.

Para pegar uma fonte do google vc vai copiar o link dela, no google fonts
colar no html e no CSS aplicar o font-family com o nome dela
font-family:'Montserrat'; (exemplo a fonte do site)

font-family:'Montserrat', sans-serif (Nosso site está assim porque caso
a aplicação não consiga baixar a fonte do google, pelo motivo q for, ela 
vai ficar com a fonte sans serif)

Sempre colocar o css do mais abrangente em direção ao mais especifico, 
como é uma linguagem em cascata ela vai aplicando as alterações na ordem
então oq vc mudar depois é o que vai ficar no resultado final

Padding é um espaçamento do elemento para dentro dele mesmo, enquanto o margin espaça uma margem pra fora, o padding centraliza
o elemento dentro do seu "escopo", exp 24px de padding no header vão jogar o texto 24px adentro da área do cabeçalho, espaçando o 
texto como preferir dentro da sua "área"

O Alling se refere a como você vai organizar o texto verticalmente, com ele vc consegue alinhar verticalmente, centralizando na mesma
direção por exemplo.

E o justify vai organizar horizontalmente, da mesma forma que se justifica um texto no word por exemplo, para poder utilizar
estas ferramenteas usaremos o display flex (ou display flexível)
Desta maneira: 
conteudo{ 
     display: flex;
    align-items: center;
    justify-content: space-between;
} Então pode perceber que verticalmente estamos alinhando o texto no centro e horizontalmente estamos justificando o texto de forma
a ter espaço entre os elementos, para eles n ficarem todos grudados na esquerda, o elemnto da logo foi inserido primeiro estará a
esquerda da página e os links que foram inseridos posteriormente serão espaçados para o outro lado.

Se você quiser estilizar um elemento dentro apenas de uma seção, você primeiro chama a seção e logo em seguida o elemento que você
quer estilizar, por exemplo para estilizar apenas os links dentro do header:

header a{
    color: #FF0000;
}
Dentro do header, as tags ancora (links) vão mudar a cor para branco

Para espaçar os links do header entre si acesaremos ele da mesma forma:
 header nav a {
    padding: n px;
}
O padding vai criar aquele espaço interno entre os elementos, no caso estamos acessando todas tags a, por isso vao se espaçar entre
si e não em relação a outros elementos, como a logo também é um link usaremos também a tag nav na hora de definir quem vai ser
espaçado, para ter mais precisão e não adicionar ainda mais padding à logo, porque isso faria com que o header ficasse maior e mais 
espaçado, perdendo estética.

Para deixar a fonte mais próxima do negrito usaremos o font-weight: n;
No caso usaremos o weight 600 que foi o baixado do google fonts junto à fonte que selecionamos
(n em ambos exemplos sendo o número que vc escolher)

Para tirar o sublinhado que os links vêm por padrão você vai remover a decoração do texto da seguinte forma 
header nav a{
    text-decoration: none;
}

Algumas funções vc n precisa sair definindo de parte em parte, exemplo
o padding n precisa ser definido assim: 
    {padding-top: 24px;
    padding-right: 80px;
    padding-bottom: 24px;
    padding-left: 80px;}

Você pode definir todos em um padding só, exp:
{
    padding: 24px 80px 24px 80px;
}
Caso você vá utilizar o de cima igual o de baixo e o da direita igual 
ao da esquerda, você pode também definir só o vertical e horizontal (vai
colocar apenas 2 definições de px ao invés de 4), exp:
{
    padding: 24px 80px;
}

Nesse caso o navegador sempre vai seguir a seuginte ordem:
topo, direita, baixo, esquerda. 

Para mudar um elemento específico de uma seção específica sem alterar os demais elementos dele na mesma seção usaremos classes,
por exemplo, quero alterar apenas alguns paragrafos ao longo da página para ficarem com uma margem 2:

no html coloco a tag <p class="paragrafo">

vou para o css e chamo essa classe com o "." :

.paragrafo{
    margin: 2px;
}

A importância da classe é que você pode usar ela em diferentes seções do 
seu site, enquanto os ids serão unicos, cada segmento tem seu id específico
que não será reutilizado em outro lugar.

Conseguimos também selecionar uma classe dentro de uma seção específica para
alaterar seus elementos apenas quando aquela calsse estiver na seção referida, exp:

#farmacia .paragrafo{ 
    max-width: 950px;
}

Position aboslute vai servir para posicionar a seta exatamente aonde queremos
mas cuidado, ele vai assumir essa posição na tela inteira, não apenas na seção
em que está inserido, a não ser que você determine anteriormente a position relative
nesta seção/classe, indicando que o que vem após é relacionado à ela

.duvida img{

    position: absolute;
    top: 32px;
    right: 24px;
}

Então pra esse exemplo funcionar, antes disso precisamos determinar o .duvida como 
position relative, da seguinte forma

.duvida{
    position: relative;
}
e só então o position abosolute será inserido com relação a posição que o elemento 
terá nesta seção/classe

.duvida h3{
    /* Essa bordinha vai ser pra posteriormente transformar os paragrafos em transições para
    revelar a reposta da dúvida em questão*/
    border: 2px solid #FF725E;
    border-radius: 8px;
    /* o pointer serve para tornar o cursor naquela mãozinha quando passar o mouse em cima do 
    h3, indicando que você pode clicar nele como se fosse um link*/
    cursor: pointer;
          }

          (somente um adendo, gostei de como ficariam os links do footer transformando-os em botões, mesmo que perca um pouco o
          contraste, exp do css a baixo)

          footer nav a{
    color: #FFFFFF;
    text-decoration: none;
    border-radius: 8px;
    background-color: #FF725E;
    padding: 15px;
    margin: 4px;
}

dentro da classe .duvida.paragrafo vamos usar o: 

  overflow: hidden;

Para fazer com que a parte que está extrapolando as bordas e invadindo outros textos fique escondida (Vale salientar
que ela só está invadindo o espaço de outros elementos pq estamos usando o "height: 0;" pra isso)

Estamos fazendo isso para as respostas ficarem escondidas, já que elas só vão aparecer quando clicarmos nelas, outro detalhe é 
a opacidade que alteramos para 0, só para a linha que não estava escondida do elemento não ficar aparecendo